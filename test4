import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.ws.soap.*;

import javax.xml.transform.Source;
import java.util.Collections;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

class SoapFaultHelperTest {

    @Test
    void test_faultDetailString_successfulConversion() throws Exception {
        // Arrange
        SoapMessage mockSoapMessage = mock(SoapMessage.class);
        SoapBody mockSoapBody = mock(SoapBody.class);
        SoapFault mockSoapFault = mock(SoapFault.class);
        SoapFaultDetail mockFaultDetail = mock(SoapFaultDetail.class);
        SoapFaultDetailElement mockDetailElement = mock(SoapFaultDetailElement.class);
        Source mockSource = mock(Source.class);

        when(mockSoapMessage.getSoapBody()).thenReturn(mockSoapBody);
        when(mockSoapBody.getFault()).thenReturn(mockSoapFault);
        when(mockSoapFault.getFaultDetail()).thenReturn(mockFaultDetail);
        when(mockFaultDetail.getDetailEntries()).thenReturn(Collections.singletonList(mockDetailElement).iterator());
        when(mockDetailElement.getSource()).thenReturn(mockSource);

        SoapFaultHelper helper = Mockito.spy(new SoapFaultHelper(mockSoapMessage));

        String expected = "<fault>Something went wrong</fault>";
        doReturn(expected).when(helper, "convertSourceToString", mockSource);

        // Act
        String actual = helper.faultDetailString();

        // Assert
        assertEquals(expected, actual);
    }

    @Test
    void test_faultDetailString_whenNoFault_returnsEmpty() {
        // Arrange
        SoapMessage mockSoapMessage = mock(SoapMessage.class);
        SoapBody mockSoapBody = mock(SoapBody.class);

        when(mockSoapMessage.getSoapBody()).thenReturn(mockSoapBody);
        when(mockSoapBody.getFault()).thenReturn(null); // Simulate no fault

        SoapFaultHelper helper = new SoapFaultHelper(mockSoapMessage);

        // Act
        String actual = helper.faultDetailString();

        // Assert
        assertEquals("", actual); // StringUtils.EMPTY expected
    }
}